import cn.com.buildsrc.*


plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-android'
    id 'androidx.benchmark'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-android-extensions'
}

android {
    signingConfigs {
        release {
        }
    }

    buildFeatures {
        dataBinding true
    }

    compileSdk BuildConfig.compileSdkVersion

    defaultConfig {
        applicationId "cn.com.longdemo"
        minSdk BuildConfig.minSdkVersion
        targetSdk BuildConfig.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "TEST_FIELD", '"TestStr"'

        manifestPlaceholders = [
                application_name             : 'DemoApplication',
                application_theme            : 'Catalog',
                catalog_application_component: 'io.material.catalog.application.DaggerCatalogApplicationComponent'
        ]
        vectorDrawables {
            useSupportLibrary true
        }

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            manifestPlaceholders = [
                    application_name: 'ReleaseApplication',
            ]

        }

        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

        }

    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }
    buildFeatures {
        compose true
        viewBinding true
    }
    composeOptions {
        kotlinCompilerExtensionVersion Versions.compose
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation project(':native_lib')

    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.1'
    implementation 'androidx.activity:activity-compose:1.4.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.4.2'
    implementation 'androidx.navigation:navigation-ui-ktx:2.4.2'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.1'
    implementation project(path: ':lib_base')
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation 'com.gzsll.jsbridge:library:1.1.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'

    implementation "androidx.work:work-runtime-ktx:2.7.1"
    implementation "androidx.startup:startup-runtime:1.1.1"

    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2")

    implementation Kotlin.kotlin_stdlib
    implementation Kotlin.kotlin_reflect

    implementation Retrofit.runtime
    implementation Retrofit.gson
    implementation Retrofit.logging

    implementation Compose.ui
    implementation Compose.material
    implementation Compose.ui_tooling_preview
    implementation Compose.ui_test_junit4
    implementation Compose.ui_tooling

    //  Compose.ui_tooling_preview


    implementation Hilt.daggerRuntime
    kaptAndroidTest Hilt.daggerCompiler
//
    //implementation Hilt.viewModule
    kapt Hilt.compiler


}